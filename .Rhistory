guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
View(data_highresid)
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_test, aes( x = lon, y = lat, color = abs(resid_avg)/buysum ), size = 0.5, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_test, aes( x = lon, y = lat, color = log(abs(resid_avg))), size = 0.5, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
ggsave("resid_geo.png")
data_res = gather(data_test, key = model, value = resid, c(pred_linear,pred_knn,pred_nnet,pred_rf))
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_res, aes( x = lon, y = lat, color = abs(resid_avg)/buysum ), size = 0.5, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
facet_wrap(~ model)
View(data_res)
View(data_res)
data_res = gather(data_test, key = model, value = pred, c(pred_linear,pred_knn,pred_nnet,pred_rf))
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_res, aes( x = lon, y = lat, color = pred/buysum ), size = 0.5, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
facet_wrap(~ model)
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_res, aes( x = lon, y = lat, color = log(abs(res))), size = 0.3, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
facet_wrap(~ model)
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_res, aes( x = lon, y = lat, color = pred - buysum), size = 0.3, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
facet_wrap(~ model)
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_res, aes( x = lon, y = lat, color = pred - buysum), size = 0.3, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()) +
facet_wrap(~ model)
setwd("~/")
getwd()
setwd("C:/Users/Kristian/Documents/Github/cph_housing")
getwd()
library("rvest")
library("stringr")
library("ggplot2")
library("ggmap")
library("tidyr")
library("viridis")
library("broom")
library("maptools")
library("caret")
library("dplyr")
library("plyr")
library("scales")
source("functions.R")
?source
setwd("C:/Users/Kristian/Documents/Github/cph_housing")
source("functions.R")
source("/functions.R")
source("~/functions.R")
source("~functions.R")
source("functions.R")
source("functions.R")
rm(dat2)
rm(data_clean)
rm(addr)
rm(data_geo)
View(data_fin)
#partition data into train (p percent of original) and test (1-p percent)
trainIndex = createDataPartition(data_modeling$nborhood, p = 0.05, list = F, times = 1)
data_train = data_modeling[trainIndex,]
data_test = data_modeling[-trainIndex,]
fitControl <- trainControl(method = "repeatedcv", number = 10, repeats = 10)
View(data_test)
data_test$pred_linear = predict(m_linear, newdata = data_test)
data_test$resid_linear = data_test$buysum - data_test$pred_linear
data_test$pred_knn = predict(m_knn, newdata = data_test)
data_test$resid_knn = data_test$buysum - data_test$pred_knn
data_test$pred_nnet = predict(m_nnet, newdata = data_test)
data_test$resid_nnet = data_test$buysum - data_test$pred_nnet
data_test$pred_rf = predict(m_rf, newdata = data_test)
data_test$resid_rf = data_test$buysum - data_test$pred_rf
data_test$pred_xgbTree = predict(m_xgbTree, newdata = data_test)
data_test$resid_xgbTree = data_test$buysum - data_test$pred_xgbTree
data_test$pred_xgbLin = predict(m_xgbLin, newdata = data_test)
data_test$resid_xgbLin = data_test$buysum - data_test$pred_xgbLin
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = pred_linear/1000000, color = "red"), alpha = 0.1, size = 0.3) +
geom_point(aes(x = buysum/1000000, y = pred_knn/1000000, color = "blue"), alpha = 0.1, size = 0.3) +
geom_point(aes(x = buysum/1000000, y = pred_rf/1000000, color = "green"),alpha = 0.1, size = 0.3) +
geom_point(aes(x = buysum/1000000, y = pred_nnet/1000000, color = "yellow"), alpha = 0.1, size = 0.3) +
geom_point(aes(x = buysum/1000000, y = pred_xgbTree/1000000, color = "purple"), alpha = 0.1, size = 0.3) +
coord_fixed(ratio=1, xlim = c(0,5), ylim = c(0,5)) +
geom_abline(slope = 1, intercept = 0) +
scale_colour_manual(name = "",
values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow", "purple"= "purple"),
labels = c("red" = "linear","blue" = "k-NN","green" = "Random Forest","yellow" = "Bayesian nnet","purple" = "xgb"), guide = "legend") +
ylab("predicted (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
data_test$resid_avg = 1/5 *(data_test$resid_knn + data_test$resid_linear + data_test$resid_nnet + data_test$resid_rf + data_test$resid_xgbTree)
grey20
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = resid_linear/1000000, color = "grey10"), size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_knn/1000000, color = "grey20"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_rf/1000000, color = "grey30"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_nnet/1000000, color = "grey40"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_xgbTree/1000000, color = "grey50"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_avg/1000000, color = "red"),size = 0.3, alpha = 0.1) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
scale_colour_manual(name = "",
values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow", "purple"= "purple"),
labels = c("red" = "linear","blue" = "k-NN","green" = "Random Forest","yellow" = "Bayesian nnet","purple" = "xgb"), guide = "legend") +
#    scale_colour_manual(name = "",
#                      values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow"),
#                      labels = c("linear", "k-NN", "Random Forest", "Bayesian nnet"), guide = "legend") +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = resid_linear/1000000, color = "grey10"), size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_knn/1000000, color = "grey20"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_rf/1000000, color = "grey30"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_nnet/1000000, color = "grey40"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_xgbTree/1000000, color = "grey50"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_avg/1000000, color = "red"),size = 0.3, alpha = 0.1) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
scale_colour_manual(name = "",
values =c("grey10"="grey10","grey20"="grey20", "grey30" = "grey30", "grey40" = "grey40", "grey50"= "grey50", "red" = "red"),
labels = c("grey10" = "linear","grey20" = "k-NN","grey30" = "Random Forest","grey40" = "Bayesian nnet","grey50" = "xgb", "red" = "average"),
guide = "legend") +
#    scale_colour_manual(name = "",
#                      values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow"),
#                      labels = c("linear", "k-NN", "Random Forest", "Bayesian nnet"), guide = "legend") +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = resid_linear/1000000, color = "grey10"), size = 0.3, alpha = 0.05) +
geom_point(aes(x = buysum/1000000, y = resid_knn/1000000, color = "grey20"),size = 0.3, alpha = 0.05) +
geom_point(aes(x = buysum/1000000, y = resid_rf/1000000, color = "grey30"),size = 0.3, alpha = 0.05) +
geom_point(aes(x = buysum/1000000, y = resid_nnet/1000000, color = "grey40"),size = 0.3, alpha = 0.05) +
geom_point(aes(x = buysum/1000000, y = resid_xgbTree/1000000, color = "grey50"),size = 0.3, alpha = 0.05) +
geom_point(aes(x = buysum/1000000, y = resid_avg/1000000, color = "red"),size = 0.3, alpha = 0.2) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
scale_colour_manual(name = "",
values =c("grey10"="grey10","grey20"="grey20", "grey30" = "grey30", "grey40" = "grey40", "grey50"= "grey50", "red" = "red"),
labels = c("grey10" = "linear","grey20" = "k-NN","grey30" = "Random Forest","grey40" = "Bayesian nnet","grey50" = "xgb", "red" = "average"),
guide = "legend") +
#    scale_colour_manual(name = "",
#                      values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow"),
#                      labels = c("linear", "k-NN", "Random Forest", "Bayesian nnet"), guide = "legend") +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggsave("residuals_avg.png")
# actual v. residuals    + AVG
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = resid_linear/1000000, color = "grey10"), size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_knn/1000000, color = "grey20"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_rf/1000000, color = "grey30"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_nnet/1000000, color = "grey40"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_xgbTree/1000000, color = "grey50"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_avg/1000000, color = "red"),size = 0.3, alpha = 0.06) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
scale_colour_manual(name = "",
values =c("grey10"="grey10","grey20"="grey20", "grey30" = "grey30", "grey40" = "grey40", "grey50"= "grey50", "red" = "red"),
labels = c("grey10" = "linear","grey20" = "k-NN","grey30" = "Random Forest","grey40" = "Bayesian nnet","grey50" = "xgb", "red" = "average"),
guide = "legend") +
#    scale_colour_manual(name = "",
#                      values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow"),
#                      labels = c("linear", "k-NN", "Random Forest", "Bayesian nnet"), guide = "legend") +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggsave("residuals_avg.png")
data_test$nborhood <- as.factor(data_test$nborhood)
levels(data_test$nborhood) <- c("Amager Ø", "Amager V", "Brønshøj", "Indre by", "Nørrebro","Nordvest","Østerbro","Vesterbro","Valby","Vanløse")
# actual v. residuals    + AVG
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = resid_linear/1000000, color = "grey10"), size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_knn/1000000, color = "grey20"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_rf/1000000, color = "grey30"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_nnet/1000000, color = "grey40"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_xgbTree/1000000, color = "grey50"),size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = resid_avg/1000000, color = "red"),size = 0.3, alpha = 0.04) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
scale_colour_manual(name = "",
values =c("grey10"="grey10","grey20"="grey20", "grey30" = "grey30", "grey40" = "grey40", "grey50"= "grey50", "red" = "red"),
labels = c("grey10" = "linear","grey20" = "k-NN","grey30" = "Random Forest","grey40" = "Bayesian nnet","grey50" = "xgb", "red" = "average"),
guide = "legend") +
#    scale_colour_manual(name = "",
#                      values =c("red"="red","blue"="blue", "green" = "green", "yellow" = "yellow"),
#                      labels = c("linear", "k-NN", "Random Forest", "Bayesian nnet"), guide = "legend") +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggsave("residuals_avg.png")
data_test$pred_avg = 1/5 *(data_test$pred_knn + data_test$pred_linear + data_test$pred_nnet + data_test$pred_rf + data_test$pred_xgbTree)
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_avg)/1000000, color = "grey10"), size = 0.3, alpha = 0.1) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_linear)/1000000, color = "grey10"), size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_avg)/1000000, color = "red"), size = 0.3, alpha = 0.1) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_linear)/1000000), color = "grey10", size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_avg)/1000000), color = "red", size = 0.3, alpha = 0.1) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1))) +
facet_wrap(~ nborhood)
ggplot(data = data_test) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_knn)/1000000), color = "grey10", size = 0.3, alpha = 0.1) +
geom_point(aes(x = buysum/1000000, y = (buysum - pred_avg)/1000000), color = "red", size = 0.3, alpha = 0.1) +
#    coord_fixed(ratio=1, xlim = c(0,5000000), ylim = c(0,5000000)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
ylab("residual y - yhat (mil.)") +
xlab("actual (mil.)") +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom",
legend.title=element_blank(),
legend.text = element_text(size = 7),
legend.background = element_rect(fill=NA)) +
guides(color = guide_legend(override.aes = list(size=2, alpha = 1)))
ggmap(map_cph, base_layer=ggplot(aes(x=lon,y=lat), data=data_geo), extent = "normal", maprange=FALSE) +
#    geom_polygon(data = bydel, aes(x = long, y = lat, group = group),
#                 color = "grey50", alpha = 0.1, show.legend = FALSE) +
geom_point(data = data_test, aes( x = lon, y = lat, color = resid_avg), size = 0.5, alpha = 0.6) +
coord_map(projection="mercator",
xlim=c(attr(map_cph, "bb")$ll.lon, attr(map_cph, "bb")$ur.lon),
ylim=c(attr(map_cph, "bb")$ll.lat, attr(map_cph, "bb")$ur.lat)) +
scale_color_gradient(high = "orange", low = "blue") +
#        scale_color_gradient2(high = "blue", mid = "orange", low = "blue") +
guides(color = guide_colorbar(barwidth = 20,
barheight = 0.3,
title = "Log of absolute average model residuals",
title.position = "top")
) +
theme(legend.position = "bottom",
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
data_clean = cleaner(data2)        # Renser datasættet, (tager output fra pagelooper som argument!)
